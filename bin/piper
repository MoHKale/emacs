#!/bin/sh
# -*- mode: sh -*- minimal setup needed to run an emacs-piper script

print_usage() { echo "usage: $0 [-h|-?] [-k] [-c] SCRIPT [SCRIPT...]"; }

temp_dir=$HOME/.emacs.d/var/piper/

while getopts h?ck option; do
    case "$option" in
        [h?]) print_usage >&2
              exit 0
              ;;
        c)  # clear temporary script files
            find "$temp_dir" -type f -exec rm -f '{}' +
            exit $? # exit code from last cmd
            ;;
        k) keep_temp_file=1
             ;;
    esac
done

shift $((OPTIND-1))

if [ $# -eq 0 ]; then print_usage >&2; exit 1; fi

failed=0 # false
for file in "$@"; do
    if [ ! -f "$file" ]; then
        echo "piper: unable to find script file: $file" >&2
        failed=1
    fi
done

[ "$failed" -eq 0 ] || exit 1

# make temporary files directory
if [ ! -d "$temp_dir" ]; then
    if ! mkdir -p "$temp_dir"; then
        echo "piper: unable to create temporary scripts directory: $temp_dir" >&2
        exit 1
    fi
fi

script_file=$(mktemp "piper.XXXXXXXXXXX" -u -p"$temp_dir")

cat - "$@" >"$script_file" <<EOF
#!/usr/bin/emacs --script

(setq package-user-dir "~/.emacs.d/bin/elpa/")
(push "~/.emacs.d/bin/straight/build/emacs-piper" load-path)
(package-initialize) ;; needed to access installed packages
(require 'piper)

EOF

/usr/bin/emacs --script "$script_file"
exit_code=$?

if [ ! "${keep_temp_file:-0}" -eq 1 ]; then
    rm -f "$script_file" >/dev/null 2>&1
fi

exit "$exit_code"
